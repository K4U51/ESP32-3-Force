Hereâ€™s the complete SquareLine Studio project setup guide:

-----

## **SquareLine Studio Project Setup**

### **1. Create New Project**

**File â†’ New Project**

-----

### **2. Project Settings**

#### **Board & Display:**

- **Board:** Arduino
- **Board Group:** Arduino
- **Board Properties:**
  - **Screen Resolution:** 480 x 480
  - **Color Depth:** 16 bit, SW
  - **Screen Rotation:** 0Â°

#### **LVGL Settings:**

- **LVGL Version:** 8.3.11 (important - must match your Arduino LVGL library)

#### **Project Settings:**

- **Project Name:** GForceMonitor (or your choice)
- **Short Name:** gforce
- **Project Export Root:** Browse to your Arduino project folder
  - Example: `C:\Users\YourName\Documents\Arduino\GForceMonitor\`

#### **UI Export Settings:**

- **UI Files Export Path:** `ui` (creates a subfolder)
  - Or leave blank to export directly to project root
- **File Output Type:** C Files (*.c)
- **File Name Pattern:** `ui_[name]`
- **Include Binaries:** No (weâ€™ll include the C arrays)

-----

### **3. Export Settings (File â†’ Project Settings â†’ Export)**

Configure these settings:

```
Template: Empty LVGL
Export UI Files: âœ… Enabled
Export Path: [Your Arduino Project Folder]/ui/
Flat Export Hierarchy: âœ… Enabled (easier for Arduino)
C Array Format: C files
Include Path Prefix: (leave empty for Arduino)
```

**Recommended folder structure:**

```
GForceMonitor/
â”œâ”€â”€ GForceMonitor.ino (your main file)
â”œâ”€â”€ ui/
â”‚   â”œâ”€â”€ ui.h
â”‚   â”œâ”€â”€ ui.c
â”‚   â”œâ”€â”€ ui_Splash.h
â”‚   â”œâ”€â”€ ui_Splash.c
â”‚   â”œâ”€â”€ ui_Stats.h
â”‚   â”œâ”€â”€ ui_Stats.c
â”‚   â”œâ”€â”€ ui_Gauge.h
â”‚   â”œâ”€â”€ ui_Gauge.c
â”‚   â”œâ”€â”€ ui_events.h
â”‚   â”œâ”€â”€ ui_events.c
â”‚   â”œâ”€â”€ ui_helpers.h
â”‚   â”œâ”€â”€ ui_helpers.c
â”‚   â””â”€â”€ images/
â”‚       â”œâ”€â”€ ui_img_logo.c
â”‚       â”œâ”€â”€ ui_img_gauge_bg.c
â”‚       â””â”€â”€ ui_img_dot.c
â””â”€â”€ [your other driver files]
```

-----

### **4. Screen Configuration**

#### **Create 3 Screens:**

1. **Screen 1: Splash**

- Name: `ui_Splash`
- Background: #000000 (Black)
- Scrollable: OFF

1. **Screen 2: Stats**

- Name: `ui_Stats`
- Background: #101010 (Dark Gray)
- Scrollable: OFF

1. **Screen 3: Gauge**

- Name: `ui_Gauge`
- Background: #000000 (Black)
- Scrollable: OFF

-----

### **5. Image Asset Settings**

**When importing images (Assets â†’ Images â†’ Add):**

For each image:

- **Color Format:** CF_TRUE_COLOR (for color images)
- **Output Format:** C array
- **Binary Format:** ARGB8888 â†’ RGB565 (matches your 16-bit display)

**Images to import:**

1. `logo.png` â†’ becomes `ui_img_logo_png`
1. `gauge_bg.png` â†’ becomes `ui_img_gauge_bg_png`
1. `dot.png` â†’ becomes `ui_img_dot_png`

-----

### **6. Font Settings (if using custom fonts)**

Default fonts available:

- Montserrat 20, 24, 32, 36, 40, 48

If you need other sizes:

- **Assets â†’ Fonts â†’ Add Font**
- Select Montserrat (built-in)
- Choose size
- Character Range: ASCII (0x20-0x7F) for basic text

-----

### **7. Export Configuration Summary**

```
Project Settings:
â”œâ”€â”€ Name: GForceMonitor
â”œâ”€â”€ Board: Arduino
â”œâ”€â”€ Resolution: 480x480
â”œâ”€â”€ Color Depth: 16-bit
â”œâ”€â”€ LVGL: 8.3.11
â””â”€â”€ Export:
    â”œâ”€â”€ Path: [Arduino Project]/ui/
    â”œâ”€â”€ Format: C Files
    â”œâ”€â”€ Flat Hierarchy: Yes
    â””â”€â”€ Template: Empty LVGL
```

-----

### **8. After Creating UI - Export Steps**

1. **File â†’ Export â†’ Export UI Files**
1. **Or:** Press `Ctrl+E` (Windows) or `Cmd+E` (Mac)
1. SquareLine will generate all files in your export folder

-----

### **9. Arduino IDE Integration**

After export, your Arduino project structure should look like:

```
GForceMonitor/
â”œâ”€â”€ GForceMonitor.ino          (your main file)
â”œâ”€â”€ I2C_Driver.h/.cpp          (your drivers)
â”œâ”€â”€ Gyro_QMI8658.h/.cpp
â”œâ”€â”€ Display_ST7701.h/.cpp
â”œâ”€â”€ LVGL_Driver.h/.cpp
â””â”€â”€ ui/                         (SquareLine generated)
    â”œâ”€â”€ ui.h
    â”œâ”€â”€ ui.c
    â”œâ”€â”€ ui_Splash.h
    â”œâ”€â”€ ui_Splash.c
    â”œâ”€â”€ ui_Stats.h
    â”œâ”€â”€ ui_Stats.c
    â”œâ”€â”€ ui_Gauge.h
    â”œâ”€â”€ ui_Gauge.c
    â”œâ”€â”€ ui_events.h
    â”œâ”€â”€ ui_events.c            (YOU modify this)
    â”œâ”€â”€ ui_helpers.h
    â”œâ”€â”€ ui_helpers.c
    â””â”€â”€ images/
        â”œâ”€â”€ ui_img_logo.c
        â”œâ”€â”€ ui_img_gauge_bg.c
        â””â”€â”€ ui_img_dot.c
```

**In your main .ino file:**

```cpp
#include "ui/ui.h"  // Include the SquareLine UI
```

-----

### **10. Verify LVGL Library Version**

In Arduino IDE:

- **Sketch â†’ Include Library â†’ Manage Libraries**
- Search for: **lvgl**
- **Install version:** 8.3.x (must match SquareLineâ€™s 8.3.11)
- **NOT version 9.x** - incompatible!

-----

### **11. Common Settings Issues**

#### If you get compilation errors:

**Check `lv_conf.h` in your Arduino LVGL library:**

```c
#define LV_COLOR_DEPTH 16        // Must be 16
#define LV_COLOR_16_SWAP 0       // Must be 0
```

**These must match SquareLineâ€™s export settings!**

-----

### **12. Quick Setup Checklist**

- [ ] SquareLine version 1.4.x or 1.5.x installed
- [ ] New project created with Arduino board
- [ ] 480x480 resolution, 16-bit color
- [ ] LVGL 8.3.11 selected
- [ ] Export path set to Arduino project folder
- [ ] 3 screens created (Splash, Stats, Gauge)
- [ ] 3 images imported
- [ ] All objects named correctly
- [ ] Events added (GESTURE + CLICKED)
- [ ] Exported successfully
- [ ] Arduino LVGL library v8.3.x installed
- [ ] `#include "ui/ui.h"` added to main

-----

## **Pro Tips** ðŸ’¡

1. **Export Early, Export Often** - Test with simple screens first
1. **Donâ€™t Edit Generated Files** - Except `ui_events.c`
1. **Keep SquareLine Project File** - Youâ€™ll need it for changes
1. **Version Control** - Commit before re-exporting (overwrites files)
1. **Image Sizes** - Keep reasonable (under 100KB each for memory)

-----

Thatâ€™s your complete SquareLine setup! Once configured, you just design your screens and export. SquareLine handles all the LVGL boilerplate code generation.â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹

#include <Arduino.h>
#include "I2C_Driver.h"
#include "Gyro_QMI8658.h"
#include "Display_ST7701.h"
#include "LVGL_Driver.h"
#include "ui.h"  // ← SquareLine generated

// Your data
float x = 0, y = 0, z = 0;
float peak_accel = 0, peak_brake = 0, peak_left = 0, peak_right = 0;

// Your hardware task
void Driver_Loop(void *parameter) {
    while (1) {
        QMI8658_Loop();
        x = Accel.x;
        y = Accel.y;
        z = Accel.z;
        
        // Track peaks
        float accel_g = y / 9.81f;
        float lateral_g = x / 9.81f;
        if (accel_g > 0) peak_accel = max(peak_accel, accel_g);
        if (accel_g < 0) peak_brake = max(peak_brake, abs(accel_g));
        if (lateral_g < 0) peak_left = max(peak_left, abs(lateral_g));
        if (lateral_g > 0) peak_right = max(peak_right, lateral_g);
        
        vTaskDelay(pdMS_TO_TICKS(50));
    }
}

// Your setup
void setup() {
    Serial.begin(115200);
    
    // Initialize hardware
    Driver_Init();
    LCD_Init();
    Lvgl_Init();
    
    // Initialize UI (SquareLine does the heavy lifting)
    ui_init();
    
    Serial.println("Setup Complete");
}

// Your update functions
void Update_Stats_Screen() {
    if (lv_scr_act() != ui_Stats) return;
    
    lv_label_set_text_fmt(ui_PeakAccelValue, "%.2f G", peak_accel);
    lv_label_set_text_fmt(ui_PeakBrakeValue, "%.2f G", peak_brake);
    lv_label_set_text_fmt(ui_PeakLeftValue, "%.2f G", peak_left);
    lv_label_set_text_fmt(ui_PeakRightValue, "%.2f G", peak_right);
}

void Update_Gauge_Screen() {
    if (lv_scr_act() != ui_Gauge) return;
    
    float xpos = 240 - ((x / 9.81f) * 150);
    float ypos = 240 - ((y / 9.81f) * 150);
    xpos = constrain(xpos, 20, 460);
    ypos = constrain(ypos, 20, 460);
    
    lv_obj_set_pos(ui_GaugeDot, (int)xpos, (int)ypos);
}

// Your main loop
void loop() {
    Update_Stats_Screen();
    Update_Gauge_Screen();
    Lvgl_Loop();
    delay(5);
}
